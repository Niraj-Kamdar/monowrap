#import * from "./schemas/manifest.graphql"
#import * into Fs from "ens/fs.polywrap.eth"

type Module {
  getManifest(path: String!): MonowrapManifest!

  buildContextGraphs(manifest: MonowrapManifest!): BuiltContextGraphs!

  # executeCommand(graph: BuiltContextGraphs!, command: String!): Boolean!
}

enum CommandStatus {
  WAITING
  RUNNING
  FAILED
  SKIPPED
  FINISHED
}

type CommandNode {
  alias: String!
  uri: String!
  args: String!
  deps: BigInt!
}

type CommandGraph {
  vertices: Map! @annotate(type: "Map<String!, CommandNode!>!")
  adjList: Map! @annotate(type: "Map<String!, [String!]!>!")
}

type DependencyNode {
  name: String!
  path: String!
  deps: BigInt!
  command: String!
  status: CommandStatus!
}

type DependencyGraph {
  vertices: Map! @annotate(type: "Map<String!, DependencyNode!>!")
  adjList: Map! @annotate(type: "Map<String!, [String!]!>!")
}

type BuiltContextGraphs {
  id: String!
  manifest: MonowrapManifest!
  dependencyGraph: DependencyGraph!
  commandGraph: CommandGraph!
}
